[tool.poetry]
name = "data-gateway"
version = "0.13.7"
repository = "https://github.com/aerosense-ai/data-gateway"
description = "A data gateway that runs on-nacelle for relaying data streams from aerosense nodes to cloud."
readme = "README.md"
authors = ["OST Aerosense", "Marcus Lugg <cortado.codes@protonmail.com>"]
license = "MIT"
keywords=["aerosense", "wind", "energy", "blades"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Operating System :: OS Independent",
]


[tool.poetry.dependencies]
python = ">=3.7.1,<3.10"
click = ">=7.1.2,<9"
google-cloud-storage = "^1.35"
pyserial = "^3.5"
python-slugify = "^5"
octue = "0.29.5"

# On raspberry pi, using the pypi binary (which is built against glibc) fails with:
#   https://stackoverflow.com/questions/72185264/glibc-2-29-not-found
# The solution is to use the wheel that's built specifically for raspberry pi: https://www.piwheels.org/project/grpcio/
# However, piwheels only has a built wheel for 1.45.0; so unless we pin that exact version, poetry specifies the latest (currently 1.46.3)
# meaning it gets installed from pypi by default.
grpcio = "1.45.0"


[tool.poetry.dev-dependencies]
# Testing.
gcp-storage-emulator = "2021.6.2"
tox = "^3.23"
# Packages for testing the cloud functions, excluding octue (the requirements for the cloud function are specified in
# `cloud_functions/requirements.txt`).
flask_wtf = "^1"
google-cloud-bigquery = "^2.29"
shapely = "^1.8"
wtforms = { extras = ["email"], version = "^3" }
# Code quality.
flake8 = "^4"
pre-commit = "^2.17"
coverage = "^6.3"
h5py = "^3.7.0"
pytest = "^7.1.2"
black = "22.3.0"


[tool.poetry.scripts]
gateway = "data_gateway.cli:gateway_cli"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
