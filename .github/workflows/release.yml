# This workflow tests and releases a new version of the package.

name: Release the package on merge into main

# Only trigger when a pull request into main branch is closed.
on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  run-tests:
    if: "github.event.pull_request.merged == true"
    runs-on: ${{ matrix.os }}
    env:
      USING_COVERAGE: '3.8'
    strategy:
      matrix:
        python: [ 3.8 ]
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Check pyproject.toml file
        run: poetry check

      - name: Install tox
        run: pip install tox

      - name: Run tests
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          TEST_PROJECT_NAME: ${{ secrets.TEST_PROJECT_NAME }}
          GOOGLE_CLOUD_PROJECT: ${{ secrets.TEST_PROJECT_NAME }}
        run: tox

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Get package version
      run: echo "PACKAGE_VERSION=$(poetry version -s)" >> $GITHUB_ENV

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, no need to create your own.
      with:
        tag_name: ${{ env.PACKAGE_VERSION }}
        release_name: ${{ github.event.pull_request.title }}
        body: ${{ github.event.pull_request.body }}
        draft: false
        prerelease: false
